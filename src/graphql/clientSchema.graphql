enum OntologyType {
  SKILL
  OCCUPATION
  TRAIT
}

input OntologyInput {
  filter: String!
  type: OntologyType
}

input ClientOccupationInput {
  id: String
  name: String
  type: OntologyType
}

input ClientSkillInput {
  name: String
}

input ContactInput {
  name: String
  email: String
  telephone: String
}

type Contact {
  name: String
  email: String
  telephone: String
}

extend type Query {
  isLoggedIn: Boolean!
  occupations: [OntologyConceptResponse!]!
  educations: [Education!]!
  contact: Contact!
  traits: [String!]!
  whoAmI: String!
}

extend type Mutation {
  addOccupationClient(
    occupation: ClientOccupationInput!
  ): OntologyConceptResponse

  addSkillClient(skill: SkillInput!): Skill 
  removeSkillClient(skill: SkillInput!): Skill 
  addEducationClient(education: EducationInput!): Education
  addTrait(trait: String!): String!
  addWhoAmI(whoAmI: String!): String!
  updateContactInformation(data: ContactInput!): Contact!
  removeEducationClient(education: EducationInput!): Education
  removeTrait(trait: String!): String!
}
