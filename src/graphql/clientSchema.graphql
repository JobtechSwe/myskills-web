enum OntologyType {
  SKILL
  OCCUPATION
  TRAIT
}

input OntologyInput {
  filter: String!
  type: OntologyType
}

type ClientSkill {
  term: String
  type: String
  sourceId: String
}

input ImgInput {
  imageString: String!
}

extend type Query {
  isLoggedIn: Boolean!
  educations: [Education!]!
  profile: Profile!
  traits: [String!]!
  whoAmI: String!
}

extend type Mutation {
  createOccupationClient(occupation: OccupationInput!): Occupation
  addSkillClient(skill: SkillInput!): ClientSkill
  removeSkillClient(skill: SkillInput!): ClientSkill
  addEducationClient(education: EducationInput!): Education
  updateEducationClient(education: EducationInput!): Education
  uploadImage(imageString: ImgInput!): String!
  addExperienceClient(experience: ExperienceInput!): Experience
  updateExperienceClient(experience: ExperienceInput!): Experience
  addTrait(trait: String!): String!
  addWhoAmI(whoAmI: String!): String!
  updateContactInformation(data: ProfileInput!): Profile!
  removeEducationClient(education: EducationInput!): Education
  removeExperienceClient(experience: ExperienceInput!): Experience
  removeTrait(trait: String!): String!
  removeOccupationClient(occupation: OccupationInput!): Boolean
}
