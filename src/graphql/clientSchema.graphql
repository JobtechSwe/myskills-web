enum OntologyType {
  SKILL
  OCCUPATION
  TRAIT
}

input OntologyInput {
  filter: String!
  type: OntologyType
}

input ImgInput {
  imageString: String!
}

extend type Query {
  isLoggedIn: Boolean!
  educations: [Education!]!
  profile: Profile!
  traits: [String!]!
  whoAmI: String!
}

extend type Mutation {
  createOccupationClient(occupation: OccupationInput!): Occupation
  addSkillClient(skill: SkillInput!): Skill!
  removeSkillClient(id: String!): Boolean!
  addEducationClient(education: EducationInput!): Education!
  updateEducationClient(education: EducationInput!): Education!
  uploadImage(imageString: ImgInput!): String!
  addExperienceClient(experience: ExperienceInput!): Experience!
  updateExperienceClient(experience: ExperienceInput!): Experience!
  addTrait(trait: String!): String!
  addWhoAmI(whoAmI: String!): String!
  updateContactInformation(data: ProfileInput!): Profile!
  removeEducationClient(id: String!): Boolean!
  removeExperienceClient(id: String!): Boolean!
  removeTrait(trait: String!): String!
  removeOccupationClient(occupation: OccupationInput!): Boolean!
}
